{"remainingRequest":"/Users/zhangyuwei/Documents/vue/RecommendSystem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangyuwei/Documents/vue/RecommendSystem/src/components/upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangyuwei/Documents/vue/RecommendSystem/src/components/upload.vue","mtime":1618154185617},{"path":"/Users/zhangyuwei/Documents/vue/RecommendSystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangyuwei/Documents/vue/RecommendSystem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zhangyuwei/Documents/vue/RecommendSystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangyuwei/Documents/vue/RecommendSystem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB1cGxvYWRfZnVuYyBmcm9tICcuLi9hcGkvdXBsb2FkJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3VwbG9hZCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgICAgZm9vZF9uYW1lOiAiIiwKICAgICAgICBmb29kX2Rlc2M6ICIiLAogICAgICAgIGZpbGVMaXN0OiBbXSwKICAgICAgICBkaWFsb2dJbWFnZVVybDogIiIsCiAgICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgICAgYmFzZTY0OiAiIgogICAgfQogIH0sCiAgbWV0aG9kczogeyAKICAgICAgZ2V0RmlsZShmaWxlKSB7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5maWxlTGlzdCkKICAgICAgICB0aGlzLmdldEJhc2U2NChmaWxlLnJhdykudGhlbihyZXMgPT4gewogICAgICAgICAgICBjb25zb2xlLmxvZygic3VjY2VzcyIpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJyZXMgPSAiICsgcmVzKQogICAgICAgICAgICBjb25zdCBwYXJhbXMgPSByZXMuc3BsaXQoJywnKQogICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhwYXJhbXMsICdwYXJhbXMnKQogICAgICAgICAgICBpZiAocGFyYW1zLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIHRoaXMuYmFzZTY0ID0gcGFyYW1zWzFdCiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmJhc2U2NCkKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJwYXI6IikKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHBhcmFtcykKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHR5cGVvZih0aGlzLmJhc2U2NCkpCiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9LAogICAgICBnZXRCYXNlNjQoZmlsZSkgewogICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICAgICAgICAgICAgbGV0IGltZ1Jlc3VsdCA9ICcnCiAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpCiAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBpbWdSZXN1bHQgPSByZWFkZXIucmVzdWx0CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmVhZGVyLm9uZXJyb3IgPSBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcikKICAgICAgICAgICAgfQogICAgICAgICAgICByZWFkZXIub25sb2FkZW5kID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmVzb2x2ZShpbWdSZXN1bHQpCiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9LAogICAgICBoYW5kbGVVcGxvYWRSZW1vdmUoZmlsZUxpc3QpIHsKICAgICAgICBmaWxlTGlzdCA9IFtdCiAgICAgICAgdGhpcy5kaWFsb2dJbWFnZVVybCA9ICIiLAogICAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgY29uc29sZS5sb2coZmlsZUxpc3QpCiAgICAgIH0sCiAgICAgIGhhbmRsZVBpY3R1cmVDYXJkUHJldmlldyhmaWxlKSB7CiAgICAgICAgdGhpcy5kaWFsb2dJbWFnZVVybCA9IGZpbGUudXJsOwogICAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICAgIH0sCiAgICAgIHVwTG9hZCgpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCLkuIrkvKDkuoYiKQogICAgICAgICAgdXBsb2FkX2Z1bmMudXBsb2FkRm9vZCh0aGlzKQogICAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    \n    <div class = \"main\">\n        <h2> Recommend</h2>\n        <el-input v-model=\"food_name\" placeholder=\"请输入食物名\" clearable></el-input><br /><br />\n        <el-input type=\"textarea\" :autosize=\"{ minRows: 6}\" v-model=\"food_desc\" placeholder=\"请输入推荐理由\" clearable></el-input>\n        <br /><br />\n      <el-upload\n            list-type=\"picture\"\n            action=''\n            accept=\".jpg, .png\"\n            :limit=\"1\"\n            :auto-upload=\"false\"\n            :file-list=\"fileList\"\n            :on-change=\"getFile\"\n            :on-preview=\"handlePictureCardPreview\"\n            :on-remove=\"handleUploadRemove\"\n            :width=\"10\"\n        >\n            <br />\n            <el-dialog :visible.sync=\"dialogVisible\" append-to-body>\n                <img width=\"100%\" :src=\"dialogImageUrl\" alt />\n            </el-dialog>\n            <el-button type=\"info\" plain >选择食物图片</el-button>\n            <div slot=\"tip\" class=\"el-upload__tip\">只能上传一张jpg/png文件</div>\n        </el-upload>\n        <el-row>\n            <el-button type=\"danger\">取消</el-button>\n            <el-button type=\"success\" @click=\"upLoad()\">上传</el-button>\n        </el-row>\n    </div>\n\n</template>\n\n<script>\nimport upload_func from '../api/upload'\nexport default {\n  name: 'upload',\n  data() {\n    return {\n        food_name: \"\",\n        food_desc: \"\",\n        fileList: [],\n        dialogImageUrl: \"\",\n        dialogVisible: false,\n        base64: \"\"\n    }\n  },\n  methods: { \n      getFile(file) {\n        console.log(this.fileList)\n        this.getBase64(file.raw).then(res => {\n            console.log(\"success\")\n            console.log(\"res = \" + res)\n            const params = res.split(',')\n            // console.log(params, 'params')\n            if (params.length > 0) {\n                this.base64 = params[1]\n                // console.log(this.base64)\n                // console.log(\"par:\")\n                // console.log(params)\n                console.log(typeof(this.base64))\n            }\n        })\n      },\n      getBase64(file) {\n        return new Promise(function (resolve, reject) {\n            const reader = new FileReader()\n            let imgResult = ''\n            reader.readAsDataURL(file)\n            reader.onload = function () {\n                imgResult = reader.result\n            }\n            reader.onerror = function (error) {\n                reject(error)\n            }\n            reader.onloadend = function () {\n                resolve(imgResult)\n            }\n        })\n      },\n      handleUploadRemove(fileList) {\n        fileList = []\n        this.dialogImageUrl = \"\",\n        this.dialogVisible = false\n        console.log(fileList)\n      },\n      handlePictureCardPreview(file) {\n        this.dialogImageUrl = file.url;\n        this.dialogVisible = true;\n      },\n      upLoad() {\n          console.log(\"上传了\")\n          upload_func.uploadFood(this)\n      }\n  }\n}\n</script>\n\n<style scoped>\n.main{\n\ttext-align: center;\n\twidth: 500px;\n\tmargin: auto;\n}\n</style>"]}]}